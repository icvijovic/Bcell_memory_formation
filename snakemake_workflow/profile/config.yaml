cluster:
  mkdir -p logs/{rule} &&
  sbatch
    --job-name={rule}
    --time={resources.time}    
    --partition={resources.partition}
    --cpus-per-task={threads}
    --mem={resources.mem_mb}
    --output=logs/{rule}/{rule}-%j.out
    --error=logs/{rule}/{rule}-%j.err
    --gpus={resources.gpus}

default-resources:
  - partition=normal,owners,quake
  - mem_mb=4000
  - gpus=0
  - time="03:00:00"
  - threads=4
restart-times: 0
rerun-triggers: mtime
max-jobs-per-second: 10
max-status-checks-per-second: 1
local-cores: 1
latency-wait: 60
jobs: 500
keep-going: True
rerun-incomplete: True
printshellcmds: True
scheduler: greedy
use-conda: True
use-singularity: True
snakefile: Snakefile.smk
set-resources:
    - preprocess_scanpy:mem_mb=210000
    - preprocess_scanpy:time=01:00:00
    - preprocess_scanpy:partition=quake,owners
    - run_cellbender:mem_mb=16000
    - run_cellbender:time=4:00:00
    - run_cellbender:partition=gpu
    - run_cellbender:gpus=1
    - cellranger_count:mem_mb=120000
    - cellranger_count:partition=quake,owners,normal
    - cellranger_count:time=48:00:00
    - cellranger_count:threads=20
    - aggegrate_h5ads:mem_mb=210000
    - cellranger_vdj:mem_mb=120000
    - star_solo_vdj:time=96:00:00
    - star_solo_vdj:threads=12
    - star_solo_vdj:partition=quake